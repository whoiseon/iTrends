// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  uid         String   @unique
  displayName String
  email       String   @unique
  createdAt   DateTime @default(now())

  items    Item[]
  comments Comment[]
}

model Item {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  author    String    @default("")
  link      String?
  thumbnail String?
  publisher Publisher @relation(fields: [publisherId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  publisherId Int

  comments Comment[]

  @@index([createdAt(sort: Desc)])
}

model Publisher {
  id      Int     @id @default(autoincrement())
  name    String
  favicon String?
  domain  String  @unique

  items Item[]
}

model Comment {
  id   Int    @id @default(autoincrement())
  text String

  User User @relation(fields: [userId], references: [id])
  item Item @relation(fields: [itemId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  subcommentsCount Int @default(0)

  parentCommentId Int?
  itemId          Int
  userId          Int

  @@index(deletedAt)
  @@index(createdAt)
  @@index(parentCommentId)
}
